---
layout: post
title:  "Neural Networks in R"
date:   2022-02-08 15:44:34 -0500
tags: [machine learning, R]
---

There are more than 80 R packages that allow Neural Network modeling. [This recent paper](https://www.inmodelia.com/exemples/2021-0103-RJournal-SM-AV-CD-PK-JN.pdf) provides an excellent discussion and thorough comparison of all these available options (updated to May 2020).

For relatively simple settings I have been using `neuralnet`, which offers several guided examples and tutorials online:
- [Github page](https://github.com/bips-hb/neuralnet)
- [datasience+ post](https://datascienceplus.com/neuralnet-train-and-test-neural-networks-using-r/)
- [R-bloggers post](https://www.r-bloggers.com/2015/09/fitting-a-neural-network-in-r-neuralnet-package/)
- [Example that also includes cross-validated NN](https://www.analyticsvidhya.com/blog/2017/09/creating-visualizing-neural-network-in-r/)

Another useful source is the [gar.fun function](https://www.r-bloggers.com/2013/08/variable-importance-in-neural-networks/), which can be used to calculate and plot variables (features) importance. This is how you can easily get the plot and the ranking after running the function:

{% highlight r %}
results<-gar.fun('y',nn)
plot(results)
a<-results$data
{% endhighlight %}
